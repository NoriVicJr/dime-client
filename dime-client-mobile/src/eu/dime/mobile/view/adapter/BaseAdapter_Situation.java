/*
* Copyright 2013 by the digital.me project (http:\\www.dime-project.eu).
*
* Licensed under the EUPL, Version 1.1 only (the "Licence");
* You may not use this work except in compliance with the Licence.
* You may obtain a copy of the Licence at:
*
* http://joinup.ec.europa.eu/software/page/eupl/licence-eupl
*
* Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the Licence for the specific language governing permissions and limitations under the Licence.
*/

package eu.dime.mobile.view.adapter;

import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import android.widget.ToggleButton;
import eu.dime.mobile.R;
import eu.dime.mobile.helper.UIHelper;
import eu.dime.mobile.helper.listener.CheckListener;
import eu.dime.mobile.helper.listener.CompoundCheckListenerSituationItem;
import eu.dime.mobile.view.abstr.BaseAdapterDisplayableItem;
import eu.dime.model.ComparatorHelper.SituationComparator;
import eu.dime.model.displayable.DisplayableItem;
import eu.dime.model.displayable.SituationItem;
import java.util.Comparator;

public class BaseAdapter_Situation extends BaseAdapterDisplayableItem {

	private SituationItem si;

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		convertView = mInflater.inflate(R.layout.adapter_situation_item, null);
		si = (SituationItem) mItems.get(position);
		TextView name = (TextView) convertView.findViewById(R.situation.textView_name);
		TextView autoGenerated = (TextView) convertView.findViewById(R.situation.textView_standard);
		TextView score = (TextView) convertView.findViewById(R.situation.textView_score);
		ToggleButton toggle = (ToggleButton) convertView.findViewById(R.situation.toggleButton_situation_item);
		CheckBox cbItemSelected = (CheckBox) convertView.findViewById(R.situation.checkBox_situation_item);
		name.setText(si.getName());
		score.setText(UIHelper.formatDoubleToPercentage(si.getScore()));
		autoGenerated.setVisibility(si.getCreator().equals("urn:auto-generated") ? View.VISIBLE : View.GONE);
		toggle.setChecked(si.isActive());
		cbItemSelected.setChecked(selection.contains(si.getGuid()));
		toggle.setOnCheckedChangeListener(new CompoundCheckListenerSituationItem<DisplayableItem>(position, this, context, mrContext));
        cbItemSelected.setOnCheckedChangeListener(new CheckListener<DisplayableItem>(position, this));
		return convertView;
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	protected Comparator createComparator() {
		return new SituationComparator(true);
	}
	
}